--https://www.roblox.com/games/5314195576/Volcano-Clicker-Legends?refPageId=26543795-201e-4b08-99ef-7c9e9bb5bd22


local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/preztel/AzureLibrary/master/uilib.lua", true))()

local AutoTab = Library:CreateTab("Clicker-Legends GUI","things", true)
local teleports = Library:CreateTab("Teleports","things", true)
local MISC = Library:CreateTab("MISC","things", true)
local eggs1 = Library:CreateTab("Auto Buy Eggs x1","things", true)
local eggs2 = Library:CreateTab("Auto Buy Eggs x3","things", true)
local credits = Library:CreateTab("Credits","things", true)


credits:CreateButton("Our Discords", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("masterkyllian#1723", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("https://discord.gg/Sr8exX4", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("bsoleil31FR#7202", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("https://discord.gg/m9Nn3qd", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("Bebo Mods#1110", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)


AutoTab:CreateButton("Destroy Gui :D", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:Destroy()
end)


MISC:CreateButton("NO CLIP Press(E)", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
_G.NO = true 
  noclip = false
game:GetService('RunService').Stepped:connect(function()
if noclip then
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end
end)
plr = game.Players.LocalPlayer
mouse = plr:GetMouse()
mouse.KeyDown:connect(function(key)

if key == "e" then
noclip = not noclip
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end
end)
print('Created by FileExplorer')
print('Credits to Peyton for the ChangeState part of this script')

         
else
_G.NO = false
end
end)

MISC:CreateToggle("Speed Hack 100", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
_G.Speed = true 
        while wait() and _G.Speed do
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 100
        end
    else
        _G.Speed = false
           game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 20
         end
end)



AutoTab:CreateToggle("Auto Buy Upgrades", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
 local args = {
    [1] = "Upgrade8",
}

game:GetService("ReplicatedStorage").Assets.Events.PurchaseUpgrade:FireServer(unpack(args))
local args = {
    [1] = "Upgrade7",
}

game:GetService("ReplicatedStorage").Assets.Events.PurchaseUpgrade:FireServer(unpack(args))
local args = {
    [1] = "Upgrade6",
}

game:GetService("ReplicatedStorage").Assets.Events.PurchaseUpgrade:FireServer(unpack(args))
local args = {
    [1] = "Upgrade5",
}

game:GetService("ReplicatedStorage").Assets.Events.PurchaseUpgrade:FireServer(unpack(args))
local args = {
    [1] = "Upgrade4",
}

game:GetService("ReplicatedStorage").Assets.Events.PurchaseUpgrade:FireServer(unpack(args))
local args = {
    [1] = "Upgrade3",
}

game:GetService("ReplicatedStorage").Assets.Events.PurchaseUpgrade:FireServer(unpack(args))
local args = {
    [1] = "Upgrade2",
}

game:GetService("ReplicatedStorage").Assets.Events.PurchaseUpgrade:FireServer(unpack(args))
local args = {
    [1] = "Upgrade1",
}

game:GetService("ReplicatedStorage").Assets.Events.PurchaseUpgrade:FireServer(unpack(args))
local args = {
    [1] = "Upgrade12",
}

game:GetService("ReplicatedStorage").Assets.Events.PurchaseUpgrade:FireServer(unpack(args))
local args = {
    [1] = "Upgrade11",
}

game:GetService("ReplicatedStorage").Assets.Events.PurchaseUpgrade:FireServer(unpack(args))
        end
    else
        _G.b= false
    end
end)


eggs1:CreateToggle("Auto Buy Common Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.c2 = true 
        while wait(0) and _G.c2 do
local args = {
    [1] = "CommonEgg",
    [2] = "Single",
}

game:GetService("ReplicatedStorage").RemoteEvents.EggOpened:InvokeServer(unpack(args))
        end
    else
        _G.c2= false
    end
end)
eggs1:CreateToggle("Auto Buy Neon Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.d2 = true 
        while wait(0) and _G.d2 do
local args = {
    [1] = "NeonEgg",
    [2] = "Single",
}

game:GetService("ReplicatedStorage").RemoteEvents.EggOpened:InvokeServer(unpack(args))
        end
    else
        _G.d2= false
    end
end)
eggs1:CreateToggle("Auto Buy Beach Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.e2 = true 
        while wait(0) and _G.e2 do
local args = {
    [1] = "BeachEgg",
    [2] = "Single",
}

game:GetService("ReplicatedStorage").RemoteEvents.EggOpened:InvokeServer(unpack(args))
        end
    else
        _G.e2= false
    end
end)
eggs1:CreateToggle("Auto Buy Candy Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.f2 = true 
        while wait(0) and _G.f2 do
local args = {
    [1] = "CandyEgg",
    [2] = "Single",
}

game:GetService("ReplicatedStorage").RemoteEvents.EggOpened:InvokeServer(unpack(args))
        end
    else
        _G.f2= false
    end
end)
eggs1:CreateToggle("Auto Buy Volcano Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.g2 = true 
        while wait(0) and _G.g2 do
local args = {
    [1] = "VolcanoEgg",
    [2] = "Single",
}

game:GetService("ReplicatedStorage").RemoteEvents.EggOpened:InvokeServer(unpack(args))
        end
    else
        _G.g2= false
    end
end)
eggs1:CreateToggle("Auto Buy 100K Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.h2 = true 
        while wait(0) and _G.h2 do
local args = {
    [1] = "eventegg",
    [2] = "Single",
}

game:GetService("ReplicatedStorage").RemoteEvents.EggOpened:InvokeServer(unpack(args))
        end
    else
        _G.h2= false
    end
end)
eggs1:CreateToggle("Auto Buy Monkey Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.i2 = true 
        while wait(0) and _G.i2 do


local args = {
    [1] = "MonkeyEgg",
    [2] = "Single",
}

game:GetService("ReplicatedStorage").RemoteEvents.EggOpened:InvokeServer(unpack(args))
        end
    else
        _G.i2= false
    end
end)
eggs1:CreateToggle("Auto Buy Winter Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.j2 = true 
        while wait(0) and _G.j2 do


local args = {
    [1] = "WinterEgg",
    [2] = "Single",
}

game:GetService("ReplicatedStorage").RemoteEvents.EggOpened:InvokeServer(unpack(args))
        end
    else
        _G.j2= false
    end
end)
eggs2:CreateToggle("Auto Buy Common Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.c = true 
        while wait(0) and _G.c do
local args = {
    [1] = "CommonEgg",
    [2] = "Triple",
}

game:GetService("ReplicatedStorage").RemoteEvents.EggOpened:InvokeServer(unpack(args))
        end
    else
        _G.c= false
    end
end)
eggs2:CreateToggle("Auto Buy Neon Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.d = true 
        while wait(0) and _G.d do
local args = {
    [1] = "NeonEgg",
    [2] = "Triple",
}

game:GetService("ReplicatedStorage").RemoteEvents.EggOpened:InvokeServer(unpack(args))
        end
    else
        _G.d= false
    end
end)
eggs2:CreateToggle("Auto Buy Beach Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.e = true 
        while wait(0) and _G.e do
local args = {
    [1] = "BeachEgg",
    [2] = "Triple",
}

game:GetService("ReplicatedStorage").RemoteEvents.EggOpened:InvokeServer(unpack(args))
        end
    else
        _G.e= false
    end
end)
eggs2:CreateToggle("Auto Buy Candy Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.f = true 
        while wait(0) and _G.f do
local args = {
    [1] = "CandyEgg",
    [2] = "Triple",
}

game:GetService("ReplicatedStorage").RemoteEvents.EggOpened:InvokeServer(unpack(args))
        end
    else
        _G.f= false
    end
end)
eggs2:CreateToggle("Auto Buy Volcano Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.g = true 
        while wait(0) and _G.g do
local args = {
    [1] = "VolcanoEgg",
    [2] = "Triple",
}

game:GetService("ReplicatedStorage").RemoteEvents.EggOpened:InvokeServer(unpack(args))
        end
    else
        _G.g= false
    end
end)
eggs2:CreateToggle("Auto Buy 100K Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.h = true 
        while wait(0) and _G.h do
local args = {
    [1] = "eventegg",
    [2] = "Triple",
}

game:GetService("ReplicatedStorage").RemoteEvents.EggOpened:InvokeServer(unpack(args))
        end
    else
        _G.h= false
    end
end)
eggs2:CreateToggle("Auto Buy Monkey Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.i = true 
        while wait(0) and _G.i do


local args = {
    [1] = "MonkeyEgg",
    [2] = "Triple",
}

game:GetService("ReplicatedStorage").RemoteEvents.EggOpened:InvokeServer(unpack(args))
        end
    else
        _G.i= false
    end
end)
eggs2:CreateToggle("Auto Buy Winter Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.j = true 
        while wait(0) and _G.j do


local args = {
    [1] = "WinterEgg",
    [2] = "Triple",
}

game:GetService("ReplicatedStorage").RemoteEvents.EggOpened:InvokeServer(unpack(args))
        end
    else
        _G.j= false
    end
end)
eggs2:CreateToggle("Auto Buy Eventm Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.k = true 
        while wait(0) and _G.k do


local args = {
    [1] = "EventmEgg",
    [2] = "Single",
}

game:GetService("ReplicatedStorage").RemoteEvents.EggOpened:InvokeServer(unpack(args))
        end
    else
        _G.k= false
    end
end)
teleports:CreateButton("Spawn", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(-5.09807253, 11.807601, 575.974487)
end)

teleports:CreateButton("Area Boost x1,5", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(-2339.31616, 42.5586433, 469.235352)
end)

teleports:CreateButton("Area Boost x2", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(-108.757118, 52.5582886, 3110.11963)
end)
teleports:CreateButton("Area Boost x2,5", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(1504.37219, 21.0154209, 580.706543)
end)
teleports:CreateButton("Area Boost x3", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(-121.929405, 16.6337032, -1405.86011)
end)
teleports:CreateButton("Area Boost x3,5", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(742.126282, 17.2005157, -132.680466)
end)
--| Anti AFK | By Altix#3395
    local Virtual = game:service'VirtualUser'
    game:service'Players'.LocalPlayer.Idled:connect(function()
        Virtual:CaptureController()
        Virtual:ClickButton2(Vector2.new())
        wait(2)
    end)
    
    local vu = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:connect(function()
   vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
   wait(1)
   vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)
