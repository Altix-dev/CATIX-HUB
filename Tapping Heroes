--https://www.roblox.com/games/5512825420/UPDATE-3-Tapping-Heroes

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/preztel/AzureLibrary/master/uilib.lua", true))()

local AutoTab = Library:CreateTab("Tapping-Heroes GUI","things", true)
local Rebirths = Library:CreateTab("Auto Rebirths","things", true)
local credits = Library:CreateTab("Credits","things", true)


credits:CreateButton("Our Discords", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("masterkyllian#1723", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("https://discord.gg/Sr8exX4", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("bsoleil31FR[inchala ptn]#9001", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("https://discord.gg/PdUTrVG", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("Big C#5347", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

AutoTab:CreateToggle("Speed Hack 100", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 100
        end
    else
        _G.Basic = false
    end
end)

AutoTab:CreateToggle("Auto Click", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.a = true 
        while wait(0) and _G.a do
local args = {
    [1] = "tap",
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
        end
    else
        _G.a = false
    end
end)

AutoTab:CreateToggle("Auto Buy Boosts", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
local args = {
    [1] = "boost",
    [2] = "taps",
    [3] = 1,
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
local args = {
    [1] = "boost",
    [2] = "taps",
    [3] = 2,
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
local args = {
    [1] = "boost",
    [2] = "diamonds",
    [3] = 1,
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
local args = {
    [1] = "boost",
    [2] = "diamonds",
    [3] = 2,
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
local args = {
    [1] = "boost",
    [2] = "renewals",
    [3] = 1,
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
-- Script generated by SimpleSpy - credits to exxtremewa#9394
-- This generator is IN DEVELOPMENT, not compatible with all types/classes yet

local args = {
    [1] = "boost",
    [2] = "renewals",
    [3] = 2,
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
        end
    else
        _G.b = false
    end
end)

AutoTab:CreateToggle("Auto Buy Upgrades", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.c = true 
        while wait(0) and _G.c do
local args = {
    [1] = "buyupgrade",
    [2] = "speed",
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
local args = {
    [1] = "buyupgrade",
    [2] = "jump",
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
local args = {
    [1] = "buyupgrade",
    [2] = "storage",
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
local args = {
    [1] = "buyupgrade",
    [2] = "taps",
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))

local args = {
    [1] = "buyupgrade",
    [2] = "taps2",
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
local args = {
    [1] = "buyupgrade",
    [2] = "fastegg",
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
        end
    else
        _G.c = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x1", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.d = true 
        while wait(0) and _G.d do
            local args = {
    [1] = "renew",
    [2] = 1,
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
        end
    else
        _G.d = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x3", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.e = true 
        while wait(0) and _G.e do
            local args = {
    [1] = "renew",
    [2] = 3,
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
        end
    else
        _G.e = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x5", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.f = true 
        while wait(0) and _G.f do
            local args = {
    [1] = "renew",
    [2] = 5,
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
        end
    else
        _G.f = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x10", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.g = true 
        while wait(0) and _G.g do
            local args = {
    [1] = "renew",
    [2] = 10,
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
        end
    else
        _G.g = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x20", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.h = true 
        while wait(0) and _G.h do
            local args = {
    [1] = "renew",
    [2] = 20,
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
        end
    else
        _G.h = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x50", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.i = true 
        while wait(0) and _G.i do
            local args = {
    [1] = "renew",
    [2] = 50,
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
        end
    else
        _G.i = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x100", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.j = true 
        while wait(0) and _G.j do
            local args = {
    [1] = "renew",
    [2] = 100,
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
        end
    else
        _G.j = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x250", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.k = true 
        while wait(0) and _G.k do
            local args = {
    [1] = "renew",
    [2] = 250,
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
        end
    else
        _G.k = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x500", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.l = true 
        while wait(0) and _G.l do
            local args = {
    [1] = "renew",
    [2] = 500,
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
        end
    else
        _G.l = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x1K", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.m = true 
        while wait(0) and _G.m do
            local args = {
    [1] = "renew",
    [2] = 1000,
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
        end
    else
        _G.m = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x5K", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.n = true 
        while wait(0) and _G.n do
            local args = {
    [1] = "renew",
    [2] = 5000,
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
        end
    else
        _G.n = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x10K", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.o = true 
        while wait(0) and _G.o do
            local args = {
    [1] = "renew",
    [2] = 10000,
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
        end
    else
        _G.o = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x50K", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.p = true 
        while wait(0) and _G.p do
            local args = {
    [1] = "renew",
    [2] = 50000,
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
        end
    else
        _G.p = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x100K", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.q = true 
        while wait(0) and _G.q do
            local args = {
    [1] = "renew",
    [2] = 100000,
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
        end
    else
        _G.q = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x500K", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.r = true 
        while wait(0) and _G.r do
            local args = {
    [1] = "renew",
    [2] = 500000,
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
        end
    else
        _G.r = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x1M", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.s = true 
        while wait(0) and _G.s do
            local args = {
    [1] = "renew",
    [2] = 1000000,
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
        end
    else
        _G.s = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x10M", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.t = true 
        while wait(0) and _G.t do
            local args = {
    [1] = "renew",
    [2] = 10000000,
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
        end
    else
        _G.t = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x50M", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.u = true 
        while wait(0) and _G.u do
            local args = {
    [1] = "renew",
    [2] = 50000000,
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
        end
    else
        _G.u = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x500M", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.v = true 
        while wait(0) and _G.v do
            local args = {
    [1] = "renew",
    [2] = 500000000,
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
        end
    else
        _G.v = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x1B", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.w = true 
        while wait(0) and _G.w do
local args = {
    [1] = "renew",
    [2] = 1000000000,
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
        end
    else
        _G.w = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x2.5B", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.x = true 
        while wait(0) and _G.x do
local args = {
    [1] = "renew",
    [2] = 2500000000,
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
        end
    else
        _G.x = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x5B", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.y = true 
        while wait(0) and _G.y do
local args = {
    [1] = "renew",
    [2] = 5000000000,
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
        end
    else
        _G.y = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x10B", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.z = true 
        while wait(0) and _G.z do
local args = {
    [1] = "renew",
    [2] = 10000000000,
}

game:GetService("ReplicatedStorage").comm.re:FireServer(unpack(args))
        end
    else
        _G.z = false
    end
end)


AutoTab:CreateButton("Destroy Gui :D", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:Destroy()
end)

teleports:CreateButton("Spawn", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(-386.600098, 5.13563347, -720.700317)
end)

teleports:CreateButton("Safe Zone", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(943.662354, 5.13563347, -896.34259)
end)

--| Anti AFK | By Altix#3395
    local Virtual = game:service'VirtualUser'
    game:service'Players'.LocalPlayer.Idled:connect(function()
        Virtual:CaptureController()
        Virtual:ClickButton2(Vector2.new())
        wait(2)
    end)
