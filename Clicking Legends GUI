--https://www.roblox.com/games/5416606558/NEW-CLICKING-LEGENDS


local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/preztel/AzureLibrary/master/uilib.lua", true))()

local AutoTab = Library:CreateTab("CLICKING-LEGENDS GUI","things", true)
local Rebirths = Library:CreateTab("Auto Buy Rebirths","things", true)
local teleports = Library:CreateTab("Teleports","things", true)
local credits = Library:CreateTab("Credits","things", true)

credits:CreateButton("Our Discords", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("masterkyllian#1723", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("https://discord.gg/Sr8exX4", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("bsoleil31FR[inchala ptn]#9001", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("https://discord.gg/PdUTrVG", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("Big C#5347", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)


AutoTab:CreateToggle("Speed Hack 100", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 100
        end
    else
        _G.Basic = false
    end
end)

AutoTab:CreateToggle("Auto Click", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
            local args = {
    [1] = "Normal"
}

game:GetService("ReplicatedStorage").Remotes.Tap:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

AutoTab:CreateToggle("Auto Click", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
            local args = {
    [1] = "Normal"
}

game:GetService("ReplicatedStorage").Remotes.Tap:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

AutoTab:CreateToggle("Auto Click", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
            local args = {
    [1] = "Normal"
}

game:GetService("ReplicatedStorage").Remotes.Tap:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

AutoTab:CreateToggle("Auto Click", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
            local args = {
    [1] = "Normal"
}

game:GetService("ReplicatedStorage").Remotes.Tap:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

AutoTab:CreateToggle("Auto Click", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
            local args = {
    [1] = "Normal"
}

game:GetService("ReplicatedStorage").Remotes.Tap:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

AutoTab:CreateToggle("Auto Click", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
            local args = {
    [1] = "Normal"
}

game:GetService("ReplicatedStorage").Remotes.Tap:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

AutoTab:CreateToggle("Auto Click", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
            local args = {
    [1] = "Normal"
}

game:GetService("ReplicatedStorage").Remotes.Tap:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

AutoTab:CreateToggle("Auto Click", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
            local args = {
    [1] = "Normal"
}

game:GetService("ReplicatedStorage").Remotes.Tap:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

AutoTab:CreateToggle("Auto Click", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
            local args = {
    [1] = "Normal"
}

game:GetService("ReplicatedStorage").Remotes.Tap:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

AutoTab:CreateToggle("Auto Click", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
            local args = {
    [1] = "Normal"
}

game:GetService("ReplicatedStorage").Remotes.Tap:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

AutoTab:CreateToggle("Auto Click", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
            local args = {
    [1] = "Normal"
}

game:GetService("ReplicatedStorage").Remotes.Tap:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

AutoTab:CreateToggle("Auto Click", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
            local args = {
    [1] = "Normal"
}

game:GetService("ReplicatedStorage").Remotes.Tap:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

AutoTab:CreateToggle("Auto Click", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
            local args = {
    [1] = "Normal"
}

game:GetService("ReplicatedStorage").Remotes.Tap:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

AutoTab:CreateToggle("Auto Click", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
            local args = {
    [1] = "Normal"
}

game:GetService("ReplicatedStorage").Remotes.Tap:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

AutoTab:CreateToggle("Auto Click", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
            local args = {
    [1] = "Normal"
}

game:GetService("ReplicatedStorage").Remotes.Tap:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

AutoTab:CreateToggle("Auto Click", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
            local args = {
    [1] = "Normal"
}

game:GetService("ReplicatedStorage").Remotes.Tap:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x1", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
           local args = {
    [1] = 1
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x5", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
           local args = {
    [1] = 5
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x25", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
           local args = {
    [1] = 25
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x50", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
           local args = {
    [1] = 50
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x150", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
           local args = {
    [1] = 150
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x500", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
           local args = {
    [1] = 500
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x2,5k", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
           local args = {
    [1] = 2500
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x10k", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
           local args = {
    [1] = 10000
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x25k", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
           local args = {
    [1] = 25000
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x50k", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
           local args = {
    [1] = 50000
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x100k", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
           local args = {
    [1] = 100000
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x250k", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
           local args = {
    [1] = 250000
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x500k", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
           local args = {
    [1] = 500000
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x1M", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
           local args = {
    [1] = 1000000
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x5M", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
           local args = {
    [1] = 5000000
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x10M", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
           local args = {
    [1] = 10000000
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x50M", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
           local args = {
    [1] = 50000000
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x100M", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
           local args = {
    [1] = 100000000
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x250M", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
           local args = {
    [1] =  250000000
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

Rebirths:CreateToggle("Auto Rebirths x750M", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
           local args = {
    [1] =  750000000
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))

        end
    else
        _G.Basic = false
    end
end)

teleports:CreateButton("Spawn", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(-167.757645, 4.20753145, 295.139069)
end)

teleports:CreateButton("Zone 1", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(13.3288307, -508.89502, -891.136414)
end)

teleports:CreateButton("Zone 2", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(605.503296, 4.00753164, -142.980774)
end)

--| Anti AFK | By Altix#3395
    local Virtual = game:service'VirtualUser'
    game:service'Players'.LocalPlayer.Idled:connect(function()
        Virtual:CaptureController()
        Virtual:ClickButton2(Vector2.new())
        wait(2)
    end)
