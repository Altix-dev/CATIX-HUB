--https://www.roblox.com/games/4634780456/NEW-Pepper-Clicker

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/preztel/AzureLibrary/master/uilib.lua", true))()

local AutoTab = Library:CreateTab("Pepper-Clicker GUI","things", true)
local teleports = Library:CreateTab("Teleports","things", true)
local rebirths = Library:CreateTab("Auto Rebirth","things", true)
local eggs = Library:CreateTab("Auto Buy Eggs","things", true)
local MISC = Library:CreateTab("MISC","things", true)
local credits = Library:CreateTab("Credits","things", true)


credits:CreateButton("Our Discords", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("masterkyllian#1723", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("https://discord.gg/Sr8exX4", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("bsoleil31FR#7202", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("https://discord.gg/m9Nn3qd", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("Bebo Mods#1110", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)


AutoTab:CreateButton("Destroy Gui :D", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:Destroy()
end)


MISC:CreateButton("NO CLIP Press(E)", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
_G.NO = true 
  noclip = false
game:GetService('RunService').Stepped:connect(function()
if noclip then
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end
end)
plr = game.Players.LocalPlayer
mouse = plr:GetMouse()
mouse.KeyDown:connect(function(key)

if key == "e" then
noclip = not noclip
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end
end)
print('Created by FileExplorer')
print('Credits to Peyton for the ChangeState part of this script')

         
else
_G.NO = false
end
end)

MISC:CreateToggle("Speed Hack 100", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
_G.Speed = true 
        while wait() and _G.Speed do
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 100
        end
    else
        _G.Speed = false
           game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 20
         end
end)



AutoTab:CreateToggle("Auto Click", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
   
game:GetService("ReplicatedStorage").Events.Click:FireServer()
        end
    else
        _G.b= false
    end
end)

AutoTab:CreateToggle("Auto Buy Peppers", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.c = true 
        while wait(0) and _G.c do
   
game:GetService("ReplicatedStorage").Events.BuyPepper:FireServer()
        end
    else
        _G.c= false
    end
end)
AutoTab:CreateToggle("Auto Buy Rebirths Shop", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.d = true 
        while wait(0) and _G.d do
   

local args = {
    [1] = "AutoClickerSpeed",
}

game:GetService("ReplicatedStorage").Events.UpgradeUpgrade:InvokeServer(unpack(args))
local args = {
    [1] = "LuckBonus",
}

game:GetService("ReplicatedStorage").Events.UpgradeUpgrade:InvokeServer(unpack(args))
local args = {
    [1] = "RebirthMultiplier",
}

game:GetService("ReplicatedStorage").Events.UpgradeUpgrade:InvokeServer(unpack(args))
local args = {
    [1] = "PetStorage",
}

game:GetService("ReplicatedStorage").Events.UpgradeUpgrade:InvokeServer(unpack(args))
local args = {
    [1] = "WalkSpeed",
}

game:GetService("ReplicatedStorage").Events.UpgradeUpgrade:InvokeServer(unpack(args))
        end
    else
        _G.d= false
    end
end)
rebirths:CreateToggle("Auto Buy Rebirths x1", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.e = true 
        while wait(0) and _G.e do
   

local args = {
    [1] = 1,
}

game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(unpack(args))
        end
    else
        _G.e= false
    end
end)
rebirths:CreateToggle("Auto Buy Rebirths x10", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.f = true 
        while wait(0) and _G.f do
   

local args = {
    [1] = 10,
}

game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(unpack(args))
        end
    else
        _G.f= false
    end
end)
rebirths:CreateToggle("Auto Buy Rebirths x100", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.j = true 
        while wait(0) and _G.j do
   

local args = {
    [1] = 100,
}

game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(unpack(args))
        end
    else
        _G.j= false
    end
end)
rebirths:CreateToggle("Auto Buy Rebirths x1K", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.m = true 
        while wait(0) and _G.m do
   

local args = {
    [1] = 1000,
}

game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(unpack(args))
        end
    else
        _G.m= false
    end
end)
rebirths:CreateToggle("Auto Buy Rebirths x10K", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.n = true 
        while wait(0) and _G.n do
   

local args = {
    [1] = 10000,
}

game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(unpack(args))
        end
    else
        _G.n= false
    end
end)
rebirths:CreateToggle("Auto Buy Rebirths x100K", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.o = true 
        while wait(0) and _G.o do
   

local args = {
    [1] = 100000,
}

game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(unpack(args))
        end
    else
        _G.o= false
    end
end)
rebirths:CreateToggle("Auto Buy Rebirths x1M", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.p = true 
        while wait(0) and _G.p do
   

local args = {
    [1] = 1000000,
}

game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(unpack(args))
        end
    else
        _G.p= false
    end
end)
rebirths:CreateToggle("Auto Buy Rebirths x10M", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.q = true 
        while wait(0) and _G.q do
   

local args = {
    [1] = 10000000,
}

game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(unpack(args))
        end
    else
        _G.q= false
    end
end)
eggs:CreateToggle("Auto Buy BasicEggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.g = true 
        while wait(0) and _G.g do
   


local args = {
    [1] = 1,
    [2] = workspace["Pet Eggs"]["Basic Egg"].Data,
}

game:GetService("ReplicatedStorage").Events.BuyEgg:InvokeServer(unpack(args))
        end
    else
        _G.g= false
    end
end)
eggs:CreateToggle("Auto Buy NatureEggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.h = true 
        while wait(0) and _G.h do
   


local args = {
    [1] = 1,
    [2] = workspace["Pet Eggs"]["Nature Egg"].Data,
}

game:GetService("ReplicatedStorage").Events.BuyEgg:InvokeServer(unpack(args))
        end
    else
        _G.h= false
    end
end)
eggs:CreateToggle("Auto Buy CrackedEggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.i = true 
        while wait(0) and _G.i do
   


local args = {
    [1] = 1,
    [2] = workspace["Pet Eggs"]["Cracked Egg"].Data,
}

game:GetService("ReplicatedStorage").Events.BuyEgg:InvokeServer(unpack(args))
        end
    else
        _G.i= false
    end
end)
eggs:CreateToggle("Auto Buy DesertEggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.k = true 
        while wait(0) and _G.k do
   


local args = {
    [1] = 1,
    [2] = workspace["Pet Eggs"]["Desert Egg"].Data,
}

game:GetService("ReplicatedStorage").Events.BuyEgg:InvokeServer(unpack(args))
        end
    else
        _G.k= false
    end
end)
eggs:CreateToggle("Auto Buy FrozenEggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.l = true 
        while wait(0) and _G.l do
   


local args = {
    [1] = 1,
    [2] = workspace["Pet Eggs"]["Frozen Egg"].Data,
}

game:GetService("ReplicatedStorage").Events.BuyEgg:InvokeServer(unpack(args))
        end
    else
        _G.l= false
    end
end)
eggs:CreateToggle("Auto Buy CrystalEggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.m = true 
        while wait(0) and _G.m do
   


local args = {
    [1] = 1,
    [2] = workspace["Pet Eggs"]["Crystal Egg"].Data,
}

game:GetService("ReplicatedStorage").Events.BuyEgg:InvokeServer(unpack(args))
        end
    else
        _G.m= false
    end
end)
eggs:CreateToggle("Auto Buy CelebrationEgg", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.n = true 
        while wait(0) and _G.n do
   


local args = {
    [1] = 1,
    [2] = workspace["Pet Eggs"]["Celebration Egg"].Data,
}

game:GetService("ReplicatedStorage").Events.BuyEgg:InvokeServer(unpack(args))
        end
    else
        _G.n= false
    end
end)
eggs:CreateToggle("Auto Buy LavaEgg", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.o = true 
        while wait(0) and _G.o do
   


local args = {
    [1] = 1,
    [2] = workspace["Pet Eggs"]["Lava Egg"].Data,
}

game:GetService("ReplicatedStorage").Events.BuyEgg:InvokeServer(unpack(args))
        end
    else
        _G.o= false
    end
end)
teleports:CreateButton("Spawn", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(-116.557777, 140.149994, -29.0575809)
end)

teleports:CreateButton("Zone 1", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(-702.061279, 124.498062, 119.354591)
end)

teleports:CreateButton("Zone 2", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(-748.103149, 162.528778, -639.707764)
end)
teleports:CreateButton("Zone 3", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(-720.48822, 139.802246, -1296.81348)
end)
teleports:CreateButton("Zone 4", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(145.147858, 229.457977, -1202.83606)
end)
--| Anti AFK | By Altix#3395
    local Virtual = game:service'VirtualUser'
    game:service'Players'.LocalPlayer.Idled:connect(function()
        Virtual:CaptureController()
        Virtual:ClickButton2(Vector2.new())
        wait(2)
    end)
    
    local vu = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:connect(function()
   vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
   wait(1)
   vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)
