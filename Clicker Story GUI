--https://www.roblox.com/games/4859936288/UPDATE-2-Clicker-Story#



local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/preztel/AzureLibrary/master/uilib.lua", true))()

local AutoTab = Library:CreateTab("Clicker Story GUI","things", true)
local Rebirth = Library:CreateTab("Auto Rebirth","things", true)
local eggs = Library:CreateTab("Auto Buy Eggs","things", true)
local teleports = Library:CreateTab("Teleports","things", true)
local Upgrades = Library:CreateTab("Upgrades","things", true)
local credits = Library:CreateTab("Credits","things", true)

credits:CreateButton("Our Discords", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("masterkyllian#1723", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("https://discord.gg/Sr8exX4", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("bsoleil31FR[inchala ptn]#9001", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("https://discord.gg/PdUTrVG", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("Big C#5347", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

eggs:CreateToggle("Auto Evolve All pets", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.a = true 
        while wait(0) and _G.a do
            local args = {
    [1] = "All",
}

game:GetService("ReplicatedStorage").Remotes.Pets.EvolvePet:FireServer(unpack(args))
        end
    else
        _G.a = false
    end
end)

eggs:CreateToggle("Auto Buy 500 Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local args = {
    [1] = " Egg",
    [2] = 1,
}

game:GetService("ReplicatedStorage").Remotes.OpenEgg:InvokeServer(unpack(args))
        end
    else
        _G.b = false
    end
end)

eggs:CreateToggle("Auto Buy 50K Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.c = true 
        while wait(0) and _G.c do
            local args = {
    [1] = "Uncommon Egg",
    [2] = 1,
}

game:GetService("ReplicatedStorage").Remotes.OpenEgg:InvokeServer(unpack(args))
        end
    else
        _G.c = false
    end
end)

eggs:CreateToggle("Auto Buy 200K Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.d = true 
        while wait(0) and _G.d do
            local args = {
    [1] = "200K Egg",
    [2] = 1,
}

game:GetService("ReplicatedStorage").Remotes.OpenEgg:InvokeServer(unpack(args))
        end
    else
        _G.d = false
    end
end)

eggs:CreateToggle("Auto Buy 750K Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.e = true 
        while wait(0) and _G.e do
            local args = {
    [1] = "XBOX Egg",
    [2] = 1,
}

game:GetService("ReplicatedStorage").Remotes.OpenEgg:InvokeServer(unpack(args))
        end
    else
        _G.e = false
    end
end)

eggs:CreateToggle("Auto Buy 5M Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.f = true 
        while wait(0) and _G.f do
            local args = {
    [1] = "Beach Egg",
    [2] = 1,
}

game:GetService("ReplicatedStorage").Remotes.OpenEgg:InvokeServer(unpack(args))
        end
    else
        _G.f = false
    end
end)

eggs:CreateToggle("Auto Buy 50b Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.g = true 
        while wait(0) and _G.g do
            local args = {
    [1] = "Frost Egg",
    [2] = 1,
}

game:GetService("ReplicatedStorage").Remotes.OpenEgg:InvokeServer(unpack(args))
        end
    else
        _G.g = false
    end
end)

eggs:CreateToggle("Auto Buy 500T Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.h = true 
        while wait(0) and _G.h do
            local args = {
    [1] = "Mystic Egg",
    [2] = 1,
}

game:GetService("ReplicatedStorage").Remotes.OpenEgg:InvokeServer(unpack(args))
        end
    else
        _G.h = false
    end
end)

eggs:CreateToggle("Auto Buy 5Qn Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.i = true 
        while wait(0) and _G.i do
            local args = {
    [1] = "Storm Egg",
    [2] = 1,
}

game:GetService("ReplicatedStorage").Remotes.OpenEgg:InvokeServer(unpack(args))
        end
    else
        _G.i = false
    end
end)

eggs:CreateToggle("Auto Buy 49.5Sx Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.j = true 
        while wait(0) and _G.j do
            local args = {
    [1] = "Ancient Egg",
    [2] = 1,
}

game:GetService("ReplicatedStorage").Remotes.OpenEgg:InvokeServer(unpack(args))
        end
    else
        _G.j = false
    end
end)

eggs:CreateToggle("Auto Buy 500Sp Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.k = true 
        while wait(0) and _G.k do
            local args = {
    [1] = "Jungle Egg",
    [2] = 1,
}

game:GetService("ReplicatedStorage").Remotes.OpenEgg:InvokeServer(unpack(args))
        end
    else
        _G.k = false
    end
end)

eggs:CreateToggle("Auto Buy 5N Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.l = true 
        while wait(0) and _G.l do
            local args = {
    [1] = "Sand Egg",
    [2] = 1,
}

game:GetService("ReplicatedStorage").Remotes.OpenEgg:InvokeServer(unpack(args))
        end
    else
        _G.l = false
    end
end)


eggs:CreateToggle("Auto Buy 49.5D Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.m = true 
        while wait(0) and _G.m do
            local args = {
    [1] = "Sakura Egg",
    [2] = 1,
}

game:GetService("ReplicatedStorage").Remotes.OpenEgg:InvokeServer(unpack(args))
        end
    else
        _G.m = false
    end
end)

AutoTab:CreateToggle("Speed Hack 100", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.n = true 
        while wait(0) and _G.n do
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 100
        end
    else
        _G.n = false
    end
end)

AutoTab:CreateToggle("Auto Clicker", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.o = true 
        while wait(0) and _G.o do
            game:GetService("ReplicatedStorage").Remotes.Click:FireServer()
        end
    else
        _G.o = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x1", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.p = true 
        while wait(0) and _G.p do
            local args = {
    [1] = 1,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.p = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x10", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.q = true 
        while wait(0) and _G.q do
           local args = {
    [1] = 10,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.q = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x50", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.r = true 
        while wait(0) and _G.r do
          local args = {
    [1] = 50,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.r = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x100", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.s = true 
        while wait(0) and _G.s do
       local args = {
    [1] = 100,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.s = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x500", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.t = true 
        while wait(0) and _G.t do
       local args = {
    [1] = 500,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.t = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x1k", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.u = true 
        while wait(0) and _G.u do
       local args = {
    [1] = 1000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.u = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x10k", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.v = true 
        while wait(0) and _G.v do
       local args = {
    [1] = 10000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.v = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x100k", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.w = true 
        while wait(0) and _G.w do
       local args = {
    [1] = 100000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.w = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x500k", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.x = true 
        while wait(0) and _G.x do
       local args = {
    [1] = 500000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.x = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x1M", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.y = true 
        while wait(0) and _G.y do
       local args = {
    [1] = 1000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.y = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x2.25M", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.z = true 
        while wait(0) and _G.z do
       local args = {
    [1] = 2250000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.z = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x5M", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.za = true 
        while wait(0) and _G.za do
       local args = {
    [1] = 5000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.za = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x20M", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zb = true 
        while wait(0) and _G.zb do
       local args = {
    [1] = 20000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.zb = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x200M", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zc = true 
        while wait(0) and _G.zc do
       local args = {
    [1] = 200000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.zc = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x750M", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zd = true 
        while wait(0) and _G.zd do
       local args = {
    [1] = 750000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.zd = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x1,5B", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.ze = true 
        while wait(0) and _G.ze do
       local args = {
    [1] = 1500000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.ze = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x5B", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zf = true 
        while wait(0) and _G.zf do
       local args = {
    [1] = 5000000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.zf = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x50B", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zg = true 
        while wait(0) and _G.zg do
       local args = {
    [1] = 50000000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.zg = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x1T", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zh = true 
        while wait(0) and _G.zh do
       local args = {
    [1] = 1000000000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.zh = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x5T", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zi = true 
        while wait(0) and _G.zi do
       local args = {
    [1] = 5000000000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.zi = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x50T", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zj = true 
        while wait(0) and _G.zj do
       local args = {
    [1] = 50000000000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.zj = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x500T", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zk = true 
        while wait(0) and _G.zk do
       local args = {
    [1] = 500000000000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.zk = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x1Qd", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zl = true 
        while wait(0) and _G.zl do
       local args = {
    [1] = 1000000000000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.zl = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x500Qd", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zm = true 
        while wait(0) and _G.zm do
       local args = {
    [1] = 50000000000000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.zm = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x1Qn", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zn = true 
        while wait(0) and _G.zn do
       local args = {
    [1] = 1000000000000000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.zn = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x500Qn", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zo = true 
        while wait(0) and _G.zo do
       local args = {
    [1] = 500000000000000000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.zo = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x1Sp", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zp = true 
        while wait(0) and _G.zp do
       local args = {
    [1] = 999999999999999983222784,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.zp = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x500Sp", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zq = true 
        while wait(0) and _G.zq do
       local args = {
    [1] = 500000000000000006643777536,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.zq = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x1Sx", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zr = true 
        while wait(0) and _G.zr do
       local args = {
    [1] = 1000000000000000000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.zr = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x50Sx", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zs = true 
        while wait(0) and _G.zs do
       local args = {
    [1] = 50000000000000000000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.zs = false
    end
end)

Upgrades:CreateToggle("AutoBuy Speed", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zt = true 
        while wait(0) and _G.zt do
       local args = {
    [1] = 1,
    [2] = true
}

game:GetService("ReplicatedStorage").Remotes.Shop.BuyUpgrade:FireServer(unpack(args))
        end
    else
        _G.zt = false
    end
end)

Upgrades:CreateToggle("AutoBuy Rebirths", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zu = true 
        while wait(0) and _G.zu do
       local args = {
    [1] = 2,
    [2] = true
}

game:GetService("ReplicatedStorage").Remotes.Shop.BuyUpgrade:FireServer(unpack(args))
        end
    else
        _G.zu = false
    end
end)

Upgrades:CreateToggle("AutoBuy Pet Inventory", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zv = true 
        while wait(0) and _G.zv do
       local args = {
    [1] = 3,
    [2] = true
}

game:GetService("ReplicatedStorage").Remotes.Shop.BuyUpgrade:FireServer(unpack(args))
        end
    else
        _G.zv = false
    end
end)

Upgrades:CreateToggle("AutoBuy Gem Multiplier", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zw = true 
        while wait(0) and _G.zw do
       local args = {
    [1] = 4,
    [2] = true
}

game:GetService("ReplicatedStorage").Remotes.Shop.BuyUpgrade:FireServer(unpack(args))
        end
    else
        _G.zw = false
    end
end)

Upgrades:CreateToggle("AutoBuy Free Auto Clicker", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zx = true 
        while wait(0) and _G.zx do
       local args = {
    [1] = 5,
    [2] = true
}

game:GetService("ReplicatedStorage").Remotes.Shop.BuyUpgrade:FireServer(unpack(args))
        end
    else
        _G.zx = false
    end
end)

Upgrades:CreateToggle("AutoBuy Faster Auto Clicker", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zy = true 
        while wait(0) and _G.zy do
       local args = {
    [1] = 6,
    [2] = true
}

game:GetService("ReplicatedStorage").Remotes.Shop.BuyUpgrade:FireServer(unpack(args))
        end
    else
        _G.zy = false
    end
end)

Upgrades:CreateToggle("AutoBuy Faster Hatching", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zz = true 
        while wait(0) and _G.zz do
       local args = {
    [1] = 7,
    [2] = true
}

game:GetService("ReplicatedStorage").Remotes.Shop.BuyUpgrade:FireServer(unpack(args))
        end
    else
        _G.zz = false
    end
end)

Upgrades:CreateToggle("AutoBuy x2 Clicks Chance", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zza = true 
        while wait(0) and _G.zza do
       local args = {
    [1] = 8,
    [2] = true
}

game:GetService("ReplicatedStorage").Remotes.Shop.BuyUpgrade:FireServer(unpack(args))
        end
    else
        _G.zza = false
    end
end)

Upgrades:CreateToggle("AutoBuy More Luck", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zzb = true 
        while wait(0) and _G.zzb do
       local args = {
    [1] = 9,
    [2] = true
}

game:GetService("ReplicatedStorage").Remotes.Shop.BuyUpgrade:FireServer(unpack(args))
        end
    else
        _G.zzb = false
    end
end)

Upgrades:CreateToggle("AutoBuy Pets Equipped", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zzc = true 
        while wait(0) and _G.zzc do
       local args = {
    [1] = 10,
    [2] = true
}

game:GetService("ReplicatedStorage").Remotes.Shop.BuyUpgrade:FireServer(unpack(args))
        end
    else
        _G.zzc = false
    end
end)

AutoTab:CreateButton("Destroy Gui :D", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:Destroy()
end)

teleports:CreateButton("Spawn", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(-17.423708, -71.6430817, 553.642273)
end)

teleports:CreateButton("Summer World", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(-729.158081, -71.643074, 1704.77795)
end)

teleports:CreateButton("Winter World", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(-1072.09729, -71.008194, -798.221069)
end)

teleports:CreateButton("Mystic World", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(-1141.41724, -71.008194, 551.978943)
end)

teleports:CreateButton("Storm World", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(-1156.88757, -71.6431274, -1639.63904)
end)

teleports:CreateButton("Castle World", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(-1150.26843, -55.3753128, -3121.21753)
end)

teleports:CreateButton("Jungle World", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(-1149.30188, -53.5753098, -4374.34814)
end)

teleports:CreateButton("Desert World", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(-1159.29663, -55.3753242, -6332.26025)
end)

teleports:CreateButton("Sakura World", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(-1151.19153, -53.5753365, -7351.24561)
end)

teleports:CreateButton("Boss", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(-53.6902809, -54.268528, -263.553345)
end)

--| Anti AFK | By Altix#3395
    local Virtual = game:service'VirtualUser'
    game:service'Players'.LocalPlayer.Idled:connect(function()
        Virtual:CaptureController()
        Virtual:ClickButton2(Vector2.new())
        wait(2)
    end)
