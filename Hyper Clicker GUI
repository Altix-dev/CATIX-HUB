--https://www.roblox.com/games/5636466220/RELEASE-Hyper-Clickers

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/preztel/AzureLibrary/master/uilib.lua", true))()

local AutoTab = Library:CreateTab("Hyper-Clickers GUI","things", true)
local teleports = Library:CreateTab("Teleports","things", true)
local eggs = Library:CreateTab("Auto Buy Eggs X3","things", true)
local eggs1 = Library:CreateTab("Auto Rebirth","things", true)
local eggs2 = Library:CreateTab("Auto Rebirth 2","things", true)
local MISC = Library:CreateTab("MISC","things", true)
local credits = Library:CreateTab("Credits","things", true)


credits:CreateButton("Our Discords", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("masterkyllian#1723", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("https://discord.gg/Sr8exX4", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("bsoleil31FR#7202", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("https://discord.gg/m9Nn3qd", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("Bebo Mods#1110", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)


AutoTab:CreateButton("Destroy Gui :D", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:Destroy()
end)


MISC:CreateToggle("NO CLIP Press(E)", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
_G.NO = true 
  noclip = false
game:GetService('RunService').Stepped:connect(function()
if noclip then
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end
end)
plr = game.Players.LocalPlayer
mouse = plr:GetMouse()
mouse.KeyDown:connect(function(key)

if key == "e" then
noclip = not noclip
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end
end)
print('Created by FileExplorer')
print('Credits to Peyton for the ChangeState part of this script')

         
else
_G.NO = false
end
end)

MISC:CreateToggle("Speed Hack 100", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
_G.Speed = true 
        while wait() and _G.Speed do
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 100
        end
    else
        _G.Speed = false
           game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 20
         end
end)



AutoTab:CreateToggle("Auto Click", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
 
game:GetService("ReplicatedStorage").Remotes.Click:FireServer()
        end
    else
        _G.b= false
    end
end)
AutoTab:CreateToggle("Auto Hyper Click", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.c = true 
        while wait(0) and _G.c do
game:GetService("ReplicatedStorage").Remotes.HyperClick:FireServer()
        end
    else
        _G.c= false
    end
end)
AutoTab:CreateToggle("Auto Buy Upgrades", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.d = true 
        while wait(0) and _G.d do

local args = {
    [1] = "TripleHatch",
    [2] = true,
}

game:GetService("ReplicatedStorage").Upgrades.Upgrades:InvokeServer(unpack(args))
local args = {
    [1] = "HatchSpeed",
    [2] = true,
}

game:GetService("ReplicatedStorage").Upgrades.Upgrades:InvokeServer(unpack(args))
local args = {
    [1] = "PetInventory",
    [2] = true,
}

game:GetService("ReplicatedStorage").Upgrades.Upgrades:InvokeServer(unpack(args))
local args = {
    [1] = "HyperClickPower",
    [2] = true,
}

game:GetService("ReplicatedStorage").Upgrades.Upgrades:InvokeServer(unpack(args))
local args = {
    [1] = "HyperClickCooldown",
    [2] = true,
}

game:GetService("ReplicatedStorage").Upgrades.Upgrades:InvokeServer(unpack(args))
local args = {
    [1] = "AutoClickerSpeed",
    [2] = true,
}

game:GetService("ReplicatedStorage").Upgrades.Upgrades:InvokeServer(unpack(args))
local args = {
    [1] = "AutoClicker",
    [2] = true,
}

game:GetService("ReplicatedStorage").Upgrades.Upgrades:InvokeServer(unpack(args))
local args = {
    [1] = "GemMultiplier",
    [2] = true,
}

game:GetService("ReplicatedStorage").Upgrades.Upgrades:InvokeServer(unpack(args))
local args = {
    [1] = "RebirthButtons",
    [2] = true,
}

game:GetService("ReplicatedStorage").Upgrades.Upgrades:InvokeServer(unpack(args))
local args = {
    [1] = "Jump",
    [2] = true,
}

game:GetService("ReplicatedStorage").Upgrades.Upgrades:InvokeServer(unpack(args))

local args = {
    [1] = "Speed",
    [2] = true,
}

game:GetService("ReplicatedStorage").Upgrades.Upgrades:InvokeServer(unpack(args))
end
    else
        _G.d= false
    end
end)
AutoTab:CreateToggle("Auto Buy Potions", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.e = true 
        while wait(0) and _G.e do
local args = {
    [1] = "DoubleGems",
    [2] = 1,
}

game:GetService("ReplicatedStorage").Remotes.BuyPotion:FireServer(unpack(args))
local args = {
    [1] = "DoubleGems",
    [2] = 10,
}

game:GetService("ReplicatedStorage").Remotes.BuyPotion:FireServer(unpack(args))
local args = {
    [1] = "DoubleGems",
    [2] = 100,
}

game:GetService("ReplicatedStorage").Remotes.BuyPotion:FireServer(unpack(args))

local args = {
    [1] = "DoubleClicks",
    [2] = 1,
}

game:GetService("ReplicatedStorage").Remotes.BuyPotion:FireServer(unpack(args))

local args = {
    [1] = "DoubleClicks",
    [2] = 10,
}

game:GetService("ReplicatedStorage").Remotes.BuyPotion:FireServer(unpack(args))
local args = {
    [1] = "DoubleClicks",
    [2] = 100,
}

game:GetService("ReplicatedStorage").Remotes.BuyPotion:FireServer(unpack(args))
        end
    else
        _G.e= false
    end
end)
eggs:CreateToggle("Auto Buy 1K Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.f = true 
        while wait(0) and _G.f do
local args = {
    [1] = "Starter",
    [2] = "Triple",
}

game:GetService("ReplicatedStorage").RemoteEvents.EggOpened:InvokeServer(unpack(args))
        end
    else
        _G.f= false
    end
end)
eggs:CreateToggle("Auto Buy 100 Gems Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.f5 = true 
        while wait(0) and _G.f5 do
local args = {
    [1] = "Good",
    [2] = "Triple",
}

game:GetService("ReplicatedStorage").RemoteEvents.EggOpened:InvokeServer(unpack(args))
        end
    else
        _G.f5= false
    end
end)
eggs:CreateToggle("Auto Buy 3B Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.f2 = true 
        while wait(0) and _G.f2 do
local args = {
    [1] = "Polar",
    [2] = "Triple",
}

game:GetService("ReplicatedStorage").RemoteEvents.EggOpened:InvokeServer(unpack(args))
        end
    else
        _G.f2= false
    end
end)
eggs:CreateToggle("Auto Buy 25T Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.f3 = true 
        while wait(0) and _G.f3 do
local args = {
    [1] = "Jungle",
    [2] = "Triple",
}

game:GetService("ReplicatedStorage").RemoteEvents.EggOpened:InvokeServer(unpack(args))
        end
    else
        _G.f3= false
    end
end)
eggs:CreateToggle("Auto Buy 5Qa Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.f4 = true 
        while wait(0) and _G.f4 do
local args = {
    [1] = "Future",
    [2] = "Triple",
}

game:GetService("ReplicatedStorage").RemoteEvents.EggOpened:InvokeServer(unpack(args))
        end
    else
        _G.f4= false
    end
end)
eggs:CreateToggle("Auto Buy 30Sx Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.f6 = true 
        while wait(0) and _G.f6 do
local args = {
    [1] = "Future",
    [2] = "Triple",
}

game:GetService("ReplicatedStorage").RemoteEvents.EggOpened:InvokeServer(unpack(args))
        end
    else
        _G.f6= false
    end
end)
eggs1:CreateToggle("Auto Buy Rebirths x1", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.g = true 
        while wait(0) and _G.g do
local args = {
    [1] = 1,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.g= false
    end
end)
eggs1:CreateToggle("Auto Buy Rebirths x5", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.h = true 
        while wait(0) and _G.h do
local args = {
    [1] = 5,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.h= false
    end
end)
eggs1:CreateToggle("Auto Buy Rebirths x10", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.i = true 
        while wait(0) and _G.i do
local args = {
    [1] = 10,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.i= false
    end
end)
eggs1:CreateToggle("Auto Buy Rebirths x25", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.j = true 
        while wait(0) and _G.j do
local args = {
    [1] = 25,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.j= false
    end
end)
eggs1:CreateToggle("Auto Buy Rebirths x50", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.k = true 
        while wait(0) and _G.k do
local args = {
    [1] = 50,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.k= false
    end
end)
eggs1:CreateToggle("Auto Buy Rebirths x100", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.l = true 
        while wait(0) and _G.l do
local args = {
    [1] = 100,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.l= false
    end
end)
eggs1:CreateToggle("Auto Buy Rebirths x250", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.m = true 
        while wait(0) and _G.m do
local args = {
    [1] = 250,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.m= false
    end
end)
eggs1:CreateToggle("Auto Buy Rebirths x500", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.n = true 
        while wait(0) and _G.n do
local args = {
    [1] = 500,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.n= false
    end
end)
eggs1:CreateToggle("Auto Buy Rebirths x1K", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.o = true 
        while wait(0) and _G.o do
local args = {
    [1] = 1000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.o= false
    end
end)
eggs1:CreateToggle("Auto Buy Rebirths x2,5K", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.p = true 
        while wait(0) and _G.p do
local args = {
    [1] = 2500,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.p= false
    end
end)
eggs1:CreateToggle("Auto Buy Rebirths x5K", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.q = true 
        while wait(0) and _G.q do
local args = {
    [1] = 5000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.q= false
    end
end)
eggs1:CreateToggle("Auto Buy Rebirths x10K", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.r = true 
        while wait(0) and _G.r do
local args = {
    [1] = 10000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.r= false
    end
end)
eggs1:CreateToggle("Auto Buy Rebirths x50K", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.s = true 
        while wait(0) and _G.s do
local args = {
    [1] = 50000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.s= false
    end
end)
eggs1:CreateToggle("Auto Buy Rebirths x250K", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.t = true 
        while wait(0) and _G.t do
local args = {
    [1] = 250000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.t= false
    end
end)
eggs1:CreateToggle("Auto Buy Rebirths x1M", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.u = true 
        while wait(0) and _G.u do
local args = {
    [1] = 1000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.u= false
    end
end)
eggs1:CreateToggle("Auto Buy Rebirths x5M", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.v = true 
        while wait(0) and _G.v do
local args = {
    [1] = 5000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.v= false
    end
end)
eggs1:CreateToggle("Auto Buy Rebirths x15M", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.w = true 
        while wait(0) and _G.w do
local args = {
    [1] = 15000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.w= false
    end
end)
eggs1:CreateToggle("Auto Buy Rebirths x30M", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.x = true 
        while wait(0) and _G.x do
local args = {
    [1] = 30000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.x= false
    end
end)
eggs1:CreateToggle("Auto Buy Rebirths x150M", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.y = true 
        while wait(0) and _G.y do
local args = {
    [1] = 150000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.y= false
    end
end)
eggs1:CreateToggle("Auto Buy Rebirths x1B", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.z = true 
        while wait(0) and _G.z do
local args = {
    [1] = 1000000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.z= false
    end
end)
eggs2:CreateToggle("Auto Buy Rebirths x10B", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.za = true 
        while wait(0) and _G.za do
local args = {
    [1] = 10000000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.za= false
    end
end)
eggs2:CreateToggle("Auto Buy Rebirths x50B", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zb = true 
        while wait(0) and _G.zb do
local args = {
    [1] = 50000000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.zb= false
    end
end)
eggs2:CreateToggle("Auto Buy Rebirths x250B", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zc = true 
        while wait(0) and _G.zc do
local args = {
    [1] = 250000000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.zc= false
    end
end)
eggs2:CreateToggle("Auto Buy Rebirths x750B", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zd = true 
        while wait(0) and _G.zd do
local args = {
    [1] = 750000000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.zd= false
    end
end)
eggs2:CreateToggle("Auto Buy Rebirths x5T", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.ze = true 
        while wait(0) and _G.ze do
local args = {
    [1] = 5000000000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.ze= false
    end
end)
eggs2:CreateToggle("Auto Buy Rebirths x30T", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zf = true 
        while wait(0) and _G.zf do
local args = {
    [1] = 30000000000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.zf= false
    end
end)
eggs2:CreateToggle("Auto Buy Rebirths x100T", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zg = true 
        while wait(0) and _G.zg do
local args = {
    [1] = 100000000000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.zg= false
    end
end)
eggs2:CreateToggle("Auto Buy Rebirths x300T", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zh = true 
        while wait(0) and _G.zh do
local args = {
    [1] = 300000000000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.zh= false
    end
end)
eggs2:CreateToggle("Auto Buy Rebirths x900T", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zi = true 
        while wait(0) and _G.zi do
local args = {
    [1] = 900000000000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.zi= false
    end
end)
eggs2:CreateToggle("Auto Buy Rebirths x2Qa", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zj = true 
        while wait(0) and _G.zj do
local args = {
    [1] = 2000000000000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.zj= false
    end
end)
eggs2:CreateToggle("Auto Buy Rebirths x17,5Qa", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zk = true 
        while wait(0) and _G.zk do
local args = {
    [1] = 17500000000000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.zk= false
    end
end)
eggs2:CreateToggle("Auto Buy Rebirths x70Qa", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zl = true 
        while wait(0) and _G.zl do
local args = {
    [1] = 70000000000000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.zl= false
    end
end)
eggs2:CreateToggle("Auto Buy Rebirths x300Qa", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zm = true 
        while wait(0) and _G.zm do
local args = {
    [1] = 300000000000000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.zm= false
    end
end)
eggs2:CreateToggle("Auto Buy Rebirths x1Qi", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.zn = true 
        while wait(0) and _G.zn do
local args = {
[1] =    1000000000000000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.zn= false
    end
end)
teleports:CreateButton("Spawn", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(-716.227356, 11.0765419, -955.934143)
end)
teleports:CreateButton("Zone 1", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(-785.043884, 10.826539, -522.039063)
end)

teleports:CreateButton("Zone 2", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(-837.606323, 13.2713995, -150.144501)
end)
teleports:CreateButton("Zone 3", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(-838.72229, 8.08687782, 205.466354)
end)
teleports:CreateButton("Zone 4", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(-398.13443, 7.92594671, 207.533737)
end)
--| Anti AFK | By Altix#3395
    local Virtual = game:service'VirtualUser'
    game:service'Players'.LocalPlayer.Idled:connect(function()
        Virtual:CaptureController()
        Virtual:ClickButton2(Vector2.new())
        wait(2)
    end)
    
    local vu = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:connect(function()
   vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
   wait(1)
   vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)
